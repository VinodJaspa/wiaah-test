# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type Category {
  id: ID!
  name: String!
  sortOrder: Int!
  status: ProductCategoryStatus!
  parantId: ID!
}

enum ProductCategoryStatus {
  active
  inActive
}

type ShippingDeliveryTimeRange {
  from: Int!
  to: Int!
}

type ShippingDetails {
  country: String!
  shippingRulesIds: [ID!]!
  cost: Float
  available: Boolean!
  deliveryTimeRange: ShippingDeliveryTimeRange
  shippingTypes: [ShippingType!]
}

enum ShippingType {
  paid
  click_and_collect
}

type Account {
  id: ID!
}

type ProductPresentation {
  type: PresentationType!
  src: String!
}

enum PresentationType {
  video
  image
}

type Cashback {
  id: ID!
  units: Int!
  amount: Int!
  type: CashbackType!
}

enum CashbackType {
  percent
  cash
}

type Discount {
  id: ID!
  units: Int!
  amount: Int!
}

type ProductAttribute {
  name: String!
  values: [String!]!
}

type Product {
  id: ID!
  sellerId: ID!
  vendor_external_link: String!
  todayProductClickId: String
  title: String!
  description: String!
  hashtags: [String!]!
  categoryId: ID!
  category: Category
  attributes: [ProductAttribute!]!
  stock: Int!
  discountId: String
  cashbackId: String
  presentations: [ProductPresentation!]!
  sizes: [ProductSize!]!
  colors: [String!]!
  thumbnail: String!
  rate: Int!
  brand: String!
  price: Float!
  visibility: VisibilityEnum!
  shippingRulesIds: [ID!]!
  shippingDetails: ShippingDetails
  reviews: Int!
  sales: Int!
  totalOrdered: Int!
  totalDiscounted: Int!
  totalDiscountedAmount: Int!
  unitsRefunded: Int!
  positiveFeedback: Int!
  negitiveFeedback: Int!
  vat: Float!
  status: ProductStatus!
  usageStatus: ProductUsageStatus!
  createdAt: String!
  updatedAt: String!
  earnings: Float!
  condition: ProductCondition!
  discount: Discount!
  cashback: Cashback!
  seller: Account!
  external_clicks: Int!
}

enum ProductSize {
  s
  m
  l
  xl
  xxl
  xxxl
  xxxxl
}

enum VisibilityEnum {
  hidden
  public
}

enum ProductStatus {
  suspended
  active
  pasued
  pending
  deleted
}

enum ProductUsageStatus {
  used
  new
}

enum ProductCondition {
  new
  used
  recondition
}

type ProductsCursorPaginationResponse {
  data: [Product!]!
  cursor: String!
  nextCursor: String!
  hasMore: Boolean!
}

type ProductFilterGroupValue {
  name: String!
  sortOrder: Int!
}

type Filter {
  id: ID!
  name: String!
  values: [ProductFilterGroupValue!]!
  sortOrder: Int!
}

type TranslationText {
  langId: String!
  value: String!
}

type Location {
  lat: Float!
  long: Float!
  address: String!
  country: String!
  city: String!
  state: String!
  postalCode: String!
}

type Shop {
  id: ID!
  ownerId: String!
  name: String!
  banner: String!
  description: String!
  verified: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  phone: String!
  email: String!
  thumbnail: String!
  location: Location!
  storeType: StoreType!
  businessType: BusinessType!
  targetGenders: [TargetGenders!]!
  storeFor: [StoreFor!]!
  status: ShopStatus!
  payment_methods: [ShopPaymentMethod!]!
  type: ServiceType
  videos: [String!]!
  images: [String!]!
  reviews: Int!
  rating: Float!
  workingSchedule: ShopWorkingSchedule!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum StoreType {
  product
  service
}

enum BusinessType {
  company
  individual
}

enum TargetGenders {
  male
  female
}

enum StoreFor {
  men
  women
  children
  babies
}

enum ShopStatus {
  inActive
  active
  suspended
}

enum ShopPaymentMethod {
  credit_card
  visa
  mastercard
  check
  cash
}

enum ServiceType {
  hotel
  holiday_rentals
  restaurant
  health_center
  beauty_center
  vehicle
}

type RawShop {
  id: ID!
  ownerId: String!
  banner: String!
  verified: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  phone: String!
  email: String!
  thumbnail: String!
  location: Location!
  storeType: StoreType!
  businessType: BusinessType!
  targetGenders: [TargetGenders!]!
  storeFor: [StoreFor!]!
  status: ShopStatus!
  payment_methods: [ShopPaymentMethod!]!
  type: ServiceType
  videos: [String!]!
  images: [String!]!
  reviews: Int!
  rating: Float!
  description: [TranslationText!]!
  name: [TranslationText!]!
}

type ShopDayWorkingHours {
  periods: [String!]!
}

type ShopSpecialDayWorkingHours {
  date: String!
  workingHours: ShopDayWorkingHours!
}

type ShopWeekdaysWorkingHours {
  mo: ShopDayWorkingHours
  tu: ShopDayWorkingHours
  we: ShopDayWorkingHours
  th: ShopDayWorkingHours
  fr: ShopDayWorkingHours
  sa: ShopDayWorkingHours
  su: ShopDayWorkingHours
}

type ShopWorkingSchedule {
  id: ID!
  sellerId: ID!
  weekdays: ShopWeekdaysWorkingHours!
  specialDays: [ShopSpecialDayWorkingHours!]!
}

type Service {
  sellerId: ID!
  shop: Shop!
}

type ShippingCountry {
  code: String!
}

type ShippingRule {
  id: ID!
  sellerId: ID!
  name: String!
  countries: [ShippingCountry!]!
  cost: Float!
  shippingType: ShippingType!
  deliveryTimeRange: ShippingDeliveryTimeRange!
}

type ShippingAddress {
  id: ID!
  ownerId: ID!
  location: Location!
  firstname: String!
  lastname: String!
  zipCode: String
  instractions: String
  phone: String
}

type ShippingRuleGeoZone {
  id: ID!
  country: String!
  zone: String!
  shippingTypeRuleId: ID!
}

type ShippingTypeRule {
  id: ID!
  name: String!
  description: String!
  type: ShippingType!
  zones: [ShippingRuleGeoZone!]!
}

type Query {
  adminGetAccountWorkingSchedule(accountId: String!): ShopWorkingSchedule!
  getMyWorkingSchedule: ShopWorkingSchedule!
  getNearShops(GetNearShopsInput: GetNearShopsInput!): [Shop!]!
  getUserShop(userId: String!): Shop!
  getUserRawShop(userId: String!): RawShop!
  getFilteredShops(filteredShopsArgs: FilteredShopsInput!): [Shop!]!
  getProductById(id: String!, isClick: Boolean!): Product!
  getMyProducts(filterInput: GetFilteredProductsInput!): [Product!]!
  getProduct(id: ID!): Product!
  getSellerProducts(args: GetSellerProductsInput!): ProductsCursorPaginationResponse!
  getProductCategories: [Category!]!
  getFilteredProductCategories(args: GetFilteredCategory): [Category!]!
  getAdminProductsFilters(getFiltersArgs: GetFiltersInput!): [Filter!]!
  getAdminProductsFilter(id: String!): Filter!
  getProductsFilters: [Filter!]!
  getAdminFilteredProducts(args: GetFilteredProductsAdminInput!): [Product!]!
  adminGetAccountProducts(args: AdminGetAccountProductsInput!): [Product!]!
  adminGetProduct(id: String!): Product
  getMyShippingAddress: [ShippingAddress!]!
  getShippingGeoZoneRules(args: AdminGetShippingGeoZoneRulesInput!): [ShippingTypeRule!]!
  getShippingTypeRule(id: String!): ShippingTypeRule!
  getShippingRuleGeoZones(id: String!): [ShippingRuleGeoZone!]!
  getMyShippingRules: [ShippingRule!]!
}

input GetNearShopsInput {
  lat: Float!
  lon: Float!
  distance: Float!
}

input FilteredShopsInput {
  storeType: StoreType
  businessType: BusinessType
  targetGender: TargetGenders
  country: String
  city: String
  pagination: GqlPaginationInput!
}

input GqlPaginationInput {
  page: Int!
  take: Int!
}

input GetFilteredProductsInput {
  categories: [ID!]
  minPrice: Float
  maxPrice: Float
  brands: [ID!]
  ratings: [Int!]
  colors: [String!]
  size: [String!]
  inStock: Boolean
  usageStatus: ProductUsageStatus
  type: ProductType
  pagination: GqlPaginationInput!
}

enum ProductType {
  goods
  digital
}

input GetSellerProductsInput {
  sellerId: String!
  idCursor: String
  take: Int!
}

input GetFilteredCategory {
  pagination: GqlPaginationInput!
  name: String
  sortOrder: Int
}

input GetFiltersInput {
  name: String
  sortOrder: Int
}

input GetFilteredProductsAdminInput {
  title: String
  seller: String
  productId: ID
  price: Float
  qty: Int
  status: ProductStatus
  updatedAt: String
  type: ProductType
  usageStatus: ProductUsageStatus
  pagination: GqlPaginationInput!
}

input AdminGetAccountProductsInput {
  title: String
  seller: String
  productId: ID
  price: Float
  qty: Int
  status: ProductStatus
  updatedAt: String
  type: ProductType
  usageStatus: ProductUsageStatus
  pagination: GqlPaginationInput!
  accountId: ID!
}

input AdminGetShippingGeoZoneRulesInput {
  name: String
  description: String
  pagination: GqlPaginationInput!
}

type Mutation {
  adminUpdateAccountWorkingSchedule(args: UpdateWorkingScheduleInput!, accountId: String!): ShopWorkingSchedule!
  updateMyWorkingSchedule(args: UpdateWorkingScheduleInput!): ShopWorkingSchedule!
  createShop(createShopInput: CreateShopInput!): Shop!
  removeAllShops: Boolean!
  updateShop(args: UpdateUserShopInput!): Shop!
  createNewProduct(createNewProductInput: CreateProductInput!): Product!
  updateProduct(updateProductArgs: UpdateProductInput!): Product!
  deleteProduct(productId: ID!): Product!
  createProductCategory(createCategoryInput: CreateCategoryInput!): Category!
  deleteProductCategory(deleteCategoryId: String!): Category!
  updateProductCategory(updateCategoryArgs: UpdateCategoryInput!): Category!
  createFilter(createFilterGroupArgs: CreateFilterInput): Filter!
  updateFilter(updateFilterArgs: UpdateFilterInput!): Filter!
  deleteFilter(deleteFilterId: String!): Filter!
  updateProductAdmin(args: UpdateProductInput!): Boolean!
  adminDeleteProduct(id: String!, reason: String!): Boolean!
  createShippingAddress(args: CreateShippingAddressInput!): Boolean!
  updateShippingAddress(args: UpdateShippingAddressInput!): Boolean!
  deleteShippingAddress(id: String!): Boolean!
  createShippingTypeRuleGeoZone(args: CreateShippingGeoZone!): Boolean!
  createShippingTypeRule(args: CreateShippingTypeRuleInput!): Boolean!
  updateShippingTypeRule(args: UpdateShippingTypeRuleInput!): Boolean!
  createShippingRule(createShippingRuleArgs: CreateShippingRuleInput!): ShippingRule!
  updateShippingRule(updateShippingRuleArgs: UpdateShippingRuleInput!): ShippingRule!
  deleteShippingRule(id: ID!): ShippingRule!
}

input UpdateWorkingScheduleInput {
  weekdays: UpdateWeekdaysWorkingHoursInput
  specialDays: [SpecialDayWorkingHoursInput!]
}

input UpdateWeekdaysWorkingHoursInput {
  mo: ServiceDayWorkingHoursInput
  tu: ServiceDayWorkingHoursInput
  we: ServiceDayWorkingHoursInput
  th: ServiceDayWorkingHoursInput
  fr: ServiceDayWorkingHoursInput
  sa: ServiceDayWorkingHoursInput
  su: ServiceDayWorkingHoursInput
}

input ServiceDayWorkingHoursInput {
  periods: [String!]!
}

input SpecialDayWorkingHoursInput {
  date: String!
  workingHours: ServiceDayWorkingHoursInput!
}

input CreateShopInput {
  name: [TranslationTextInput!]!
  description: [TranslationTextInput!]!
  banner: String!
  phone: String!
  email: String!
  thumbnail: String!
  location: LocationInput!
  storeType: StoreType!
  businessType: BusinessType!
  storeFor: [StoreFor!]!
  targetGenders: [TargetGenders!]!
  vat: VatSettingsPartialInput
  status: ShopStatus!
  payment_methods: [ShopPaymentMethod!]!
  type: ServiceType
  vidoes: [String!]!
  images: [String!]!
  hashtags: [String!]!
}

input TranslationTextInput {
  langId: String!
  value: String!
}

input LocationInput {
  lat: Float
  long: Float
  address: String!
  country: String!
  city: String!
  state: String!
  postalCode: String!
}

input VatSettingsPartialInput {
  VatID: String
  location: LocationInput
}

input UpdateUserShopInput {
  name: [TranslationTextInput!]
  description: [TranslationTextInput!]
  banner: String
  phone: String
  email: String
  thumbnail: String
  location: LocationInput
  storeType: StoreType
  businessType: BusinessType
  storeFor: [StoreFor!]
  targetGenders: [TargetGenders!]
  vat: VatSettingsPartialInput
  status: ShopStatus
  payment_methods: [ShopPaymentMethod!]
  type: ServiceType
  vidoes: [String!]
  images: [String!]
  hashtags: [String!]
  userId: String!
}

input CreateProductInput {
  external_link: String
  type: ProductType!
  title: [StringTranslationField!]!
  description: [StringTranslationField!]!
  categoryId: ID!
  attributes: [ProductAttributeInput!]!
  stock: Int!
  discount: DiscountInput!
  cashback: CashBackInput!
  presentations: [Upload!]!
  thumbnail: String!
  price: Float!
  brand: String!
  visibility: VisibilityEnum!
  vat: Float!
  condition: ProductCondition!
  sizes: [ProductSize!]!
  colors: [String!]!
}

input StringTranslationField {
  langId: String!
  value: String!
}

input ProductAttributeInput {
  name: String!
  values: [String!]!
}

input DiscountInput {
  units: Int!
  amount: Int!
}

input CashBackInput {
  units: Int!
  amount: Int!
  type: CashbackType!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateProductInput {
  external_link: String
  type: ProductType
  title: [StringTranslationField!]
  description: [StringTranslationField!]
  categoryId: ID
  attributes: [ProductAttributeInput!]
  stock: Int
  discount: DiscountInput
  cashback: CashBackInput
  presentations: [Upload!]
  thumbnail: String
  price: Float
  brand: String
  visibility: VisibilityEnum
  vat: Float
  condition: ProductCondition
  sizes: [ProductSize!]
  colors: [String!]
  id: ID!
  oldPresentations: [ProductPresentationInput!]!
}

input ProductPresentationInput {
  type: PresentationType!
  src: String!
}

input CreateCategoryInput {
  parantId: ID
  name: String!
  sortOrder: Int!
  status: ProductCategoryStatus!
}

input UpdateCategoryInput {
  parantId: ID
  name: String
  sortOrder: Int
  status: ProductCategoryStatus
  id: ID!
}

input CreateFilterInput {
  name: [StringTranslationField!]!
  sortOrder: Int!
  values: [ProductFilterGroupValueInput!]!
}

input ProductFilterGroupValueInput {
  name: [StringTranslationField!]!
  sortOrder: Int!
}

input UpdateFilterInput {
  name: [StringTranslationField!]
  sortOrder: Int
  values: [ProductFilterGroupValueInput!]
  id: ID!
}

input CreateShippingAddressInput {
  ownerId: ID!
  location: LocationInput!
  firstname: String!
  lastname: String!
  zipCode: String
  instractions: String
  phone: String
}

input UpdateShippingAddressInput {
  ownerId: ID
  location: LocationInput
  firstname: String
  lastname: String
  zipCode: String
  instractions: String
  phone: String
  id: ID!
}

input CreateShippingGeoZone {
  country: String!
  zone: String!
  shippingTypeRuleId: ID!
}

input CreateShippingTypeRuleInput {
  name: String!
  description: String!
  type: ShippingType!
  zones: [CreateShippingRuleGeoZoneInput!]!
}

input CreateShippingRuleGeoZoneInput {
  country: String!
  zone: String!
}

input UpdateShippingTypeRuleInput {
  name: String
  description: String
  type: ShippingType
  zones: [UpdateShippingRuleGeoZoneInput!]
  id: String!
}

input UpdateShippingRuleGeoZoneInput {
  country: String
  zone: String
  id: String!
}

input CreateShippingRuleInput {
  countries: [ShippingCountryInput!]!
  name: String!
  cost: Float!
  shippingType: ShippingType!
  deliveryTimeRange: ShippingDeliveryTimeRangeInput!
}

input ShippingCountryInput {
  code: String!
}

input ShippingDeliveryTimeRangeInput {
  from: Int!
  to: Int!
}

input UpdateShippingRuleInput {
  countries: [ShippingCountryInput!]
  name: String
  cost: Float
  shippingType: ShippingType
  deliveryTimeRange: ShippingDeliveryTimeRangeInput
  id: ID!
}
