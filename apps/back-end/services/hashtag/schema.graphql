# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @link(url: String!, import: [link__Import]) on SCHEMA

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

type Hashtag {
  id: ID!
  tag: String!
  usage: Int!
  createdById: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Account!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Account {
  id: ID!
}

type Query {
  getTopHashtags(args: GetTopHashtagsInput!): [Hashtag!]!
  getAddableHashtags(args: GetAddableHashtagsInput!): [Hashtag!]!
  adminGetHashtag(args: GetFilteredHashtagsInput!): [Hashtag!]!
}

input GetTopHashtagsInput {
  q: String
  pagination: GqlPaginationInput!
}

input GqlPaginationInput {
  page: Int!
  take: Int!
}

input GetAddableHashtagsInput {
  pagination: GqlCursorPaginationInput!
  q: String
}

input GqlCursorPaginationInput {
  take: Int!
  cursor: String
}

input GetFilteredHashtagsInput {
  tag: String
  usage: Int
  status: HashtagStatus
  createdAt: String
  pagination: GqlPaginationInput!
}

enum HashtagStatus {
  suspended
  active
}

type Mutation {
  updateHashtag(args: UpdateHashtagInput!): Hashtag!
}

input UpdateHashtagInput {
  status: HashtagStatus
  tag: String!
}

scalar link__Import