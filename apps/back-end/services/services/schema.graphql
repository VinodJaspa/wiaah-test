# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type ServicePresentation {
  type: ServicePresentationType!
  src: String!
}

enum ServicePresentationType {
  img
  vid
}

type ServicePolicy {
  policyTitle: String!
  terms: [String!]!
}

type ServiceTranslationPolicy {
  langId: String!
  value: [ServicePolicy!]!
}

type ServiceMetaInfo {
  title: String!
  description: String!
  metaTagDescription: String!
  metaTagKeywords: [String!]!
  hashtags: [String!]!
}

type ServiceMetaInfoTranslation {
  langId: String!
  value: ServiceMetaInfo!
}

type ServiceDailyPrices {
  mo: Int!
  tu: Int!
  we: Int!
  th: Int!
  fr: Int!
  sa: Int!
  su: Int!
}

type ServiceDiscount {
  value: Float!
  units: Int!
}

type ServiceAmenity {
  value: String!
  label: String!
}

type ServiceCancelationPolicy {
  duration: Int!
  cost: Int!
}

type ServiceExtra {
  id: String!
  name: String!
  cost: Int!
}

type ServicePropertyMeasurements {
  inFeet: Int!
  inMeter: Int!
}

type TranslationText {
  langId: String!
  value: String!
}

type ServiceLocation {
  address: String!
  country: String!
  state: String!
  city: String!
  lat: Float!
  lon: Float!
  postalCode: Int!
}

type HotelRoom {
  id: ID!
  hotel: Hotel
  hotelId: ID!
  sellerId: ID!
  title: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  pricePerNight: Int!
  dailyPrice: Boolean!
  presentations: [ServicePresentation!]!
  dailyPrices: ServiceDailyPrices
  rating: Float!
  reviews: Int!
  discount: ServiceDiscount!
  includedServices: [String!]
  popularAmenities: [ServiceAmenity!]
  cancelationPolicies: [ServiceCancelationPolicy!]!
  extras: [ServiceExtra!]
  includedAmenities: [String!]
  beds: Int!
  bathrooms: Int!
  num_of_rooms: Int!
  measurements: ServicePropertyMeasurements!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ServiceServiceDayWorkingHours {
  periods: [String!]!
}

type SpecialDayWorkingHours {
  date: String!
  workingHours: ServiceServiceDayWorkingHours!
}

type ServiceWeekdaysWorkingHours {
  mo: ServiceServiceDayWorkingHours
  tu: ServiceServiceDayWorkingHours
  we: ServiceServiceDayWorkingHours
  th: ServiceServiceDayWorkingHours
  fr: ServiceServiceDayWorkingHours
  sa: ServiceServiceDayWorkingHours
  su: ServiceServiceDayWorkingHours
}

type ServiceWorkingSchedule {
  id: ID!
  weekdays: ServiceWeekdaysWorkingHours!
  specialDays: [SpecialDayWorkingHours!]!
}

type ServiceContact {
  address: String!
  country: String!
  state: String
  city: String!
  email: String!
  phone: String!
}

type Account {
  id: ID!
  service: Service!
}

type Hotel {
  owner: Account!
  id: ID!
  ownerId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  location: ServiceLocation!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  rooms: [HotelRoom!]!
  contact: ServiceContact!
  workingHours: ServiceWorkingSchedule
}

type ServiceCategoryFilterValue {
  name: [TranslationText!]!
  filteringValue: String!
  sortOrder: Int!
}

type ServiceCategory {
  id: ID!
  name: [TranslationText!]!
  sortOrder: Int!
  status: ServiceCategoryStatus!
  type: ServiceType!
  filters: [ServiceCategoryFilterValue!]!
  thumbnail: String!
  description: [TranslationText!]!
  metaTagDescription: [TranslationText!]!
  metaTagTitle: [TranslationText!]!
  metaTagKeywords: [TranslationText!]!
  seo: [TranslationText!]!
}

enum ServiceCategoryStatus {
  active
  inActive
}

enum ServiceType {
  hotel
  holiday_rentals
  restaurant
  health_center
  beauty_center
  vehicle
}

type Service {
  id: ID!
  sellerId: ID!
  type: ServiceType!
  name: String!
  description: String!
  createdAt: String!
  updatedAt: String!
  price: Int!
  thumbnail: String!
  rating: Float!
  reviews: Int!
  discount: ServiceDiscount
  cancelable: Boolean!
  cancelationPolicy: ServiceCancelationType!
  popularAmenities: [String!]
  includedServices: [String!]
  extras: [ServiceExtra!]
  includedAmenities: [String!]
  dailyPrice: Boolean
  dailyPrices: ServiceDailyPrices
  beds: Int
  bathrooms: Int
  num_of_rooms: Int
  measurements: ServicePropertyMeasurements
  units: Int
  typeOfPlace: RentalTypeOfPlace
  propertyType: RentalPropertyType
  cleaningFee: Float
  adaptedFor: [ServiceAdaptation!]
  restriction: [ServiceRestriction!]
  deposit: Boolean
  depositAmount: Int
  brand: String
  model: String
  seats: Int
  windows: Int
  maxSpeedInKm: Int
  lugaggeCapacity: Int
  gpsAvailable: Boolean
  airCondition: Boolean
  vehicleCategoryId: String
  treatmentCategoryId: ID
  duration: Int
  specialityId: ID
  speakingLanguages: [DoctorSpeakingLanguage!]
  availableAppointments: [String!]
  sessionDurationMins: Int
  ingredients: [String!]
  menuType: RestaurantDishType
  workingHours: ServiceWorkingSchedule
  owner: Account!
  speciality: String
  treatmentCategory: String
}

enum ServiceCancelationType {
  simple
  moderate
  strict
}

enum RentalTypeOfPlace {
  entire
  shared
}

enum RentalPropertyType {
  flat
  house
  appertemant
  studio
  villa
}

enum ServiceAdaptation {
  newBorn
  children
  wheelchair
}

enum ServiceRestriction {
  event
  smoking
  pets
}

enum DoctorSpeakingLanguage {
  EN
  FR
  GE
  GD
}

enum RestaurantDishType {
  starter
  dessert
  main
  drinks
}

type RawService {
  id: String!
  sellerId: String!
  name: [TranslationText!]!
  description: [TranslationText!]!
  price: Float!
  thumbnail: String!
  rating: Float!
  reviews: Int!
  discount: ServiceDiscount!
}

type HotelAvailablity {
  bookedDates: [String!]!
}

type BookingCostService {
  service: Service!
  qty: Int!
}

type BookingCost {
  total: Float!
  subTotal: Float!
  vatPercent: Float!
  vatAmount: Float!
  deposit: Float!
  extras: Float!
  services: [BookingCostService!]!
}

type ServicesCursorPaginationResponse {
  data: [Service!]!
  cursor: String!
  nextCursor: String!
  hasMore: Boolean!
}

type RestaurantMenu {
  id: ID!
  restaurantId: ID!
  name: String!
  dishs: [Dish!]!
  restaurant: Service!
}

type Dish {
  id: ID!
  name: String!
  price: Float!
  ingredients: [String!]!
  thumbnail: String!
  menuId: ID!
  type: RestaurantDishType!
  sales: Int!
  menu: RestaurantMenu!
}

type Insurance {
  id: ID!
  bookId: ID!
  buyerId: ID!
  sellerId: ID!
  amount: Float!
  status: ServiceInsuranceStatusEnum!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ServiceInsuranceStatusEnum {
  pending
  paid
  requested
  refused
  refunded
}

type BeautyCenterTreatmentCategory {
  id: ID!
  createdById: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
}

type Treatment {
  id: ID!
  treatmentCategoryId: ID!
  category: BeautyCenterTreatmentCategory
  title: String!
  price: Float!
  duration: [Int!]!
  discount: ServiceDiscount!
  thumbnail: String!
  beautyCenterServiceId: ID!
}

type HealthCenterSpecialty {
  id: ID!
  doctors: [Doctor!]
  name: String!
  description: String!
}

type Doctor {
  id: ID!
  healthCenter: HealthCenter
  speciality: HealthCenterSpecialty
  healthCenterId: ID!
  specialityId: ID!
  rating: Float!
  name: String!
  thumbnail: String!
  price: Float!
  description: String!
  availablityStatus: HealthCenterDoctorAvailablityStatus!
}

enum HealthCenterDoctorAvailablityStatus {
  available
  unavailable
}

type HealthCenter {
  owner: Account
  contact: ServiceContact!
  id: ID!
  ownerId: ID!
  vat: Float!
  rating: Float!
  totalReviews: Int!
  location: ServiceLocation!
  status: ServiceStatus!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  payment_methods: [ServicePaymentMethod!]!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  doctors: [Doctor!]!
}

enum ServiceStatus {
  inActive
  active
  suspended
}

enum ServicePaymentMethod {
  credit_card
  visa
  mastercard
  check
  cash
}

type VehicleProperties {
  seats: Int!
  windows: Int!
  maxSpeedInKm: Int!
  lugaggeCapacity: Int!
  gpsAvailable: Boolean!
  airCondition: Boolean!
}

type Vehicle {
  id: ID!
  title: String!
  presentations: [ServicePresentation!]!
  brand: String!
  model: String!
  price: Int!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  properties: VehicleProperties!
}

type ServiceDiscovery {
  id: ID!
  thumbnail: String!
  title: String!
  sellerName: String!
  sellerId: ID!
  price: [Float!]!
  type: ServiceType!
  status: ServiceStatus!
  updatedAt: String!
}

type ServiceShopRaw {
  id: ID!
  type: ServiceType!
  ownerId: ID!
  createdAt: String!
  updatedAt: String!
  status: ServiceStatus!
  presentations: [ServicePresentation!]!
  serviceMetaInfo: [ServiceMetaInfoTranslation!]!
  contact: ServiceContact!
  workingHours: ServiceWorkingSchedule
  policies: [ServiceTranslationPolicy!]!
  payment_methods: [ServicePaymentMethod!]!
  location: ServiceLocation!
  vat: Float!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  lowest_price: Float!
  highest_price: Float!
  rating: Float!
  reviews: Int!
  type_of_seller: ServiceTypeOfSeller!
  suspensionReason: String
  rooms: [HotelRoom!]
  menus: [RestaurantMenu!]
  establishmentTypeId: String
  cuisinesTypeId: String
  setting_and_ambianceId: String
  michelin_guide_stars: Int
  doctors: [Doctor!]
  treatments: [Treatment!]
  vehicle: [Vehicle!]
}

enum ServiceTypeOfSeller {
  individual
  professional
}

type BookedService {
  id: ID!
  serviceId: [ID!]!
  ownerId: ID!
  type: String!
  providerId: ID!
  status: BookedServiceStatus!
  payment: String
  checkin: DateTime!
  checkout: DateTime
  duration: Int
  guests: Int!
  extrasIds: [ID!]
  discountId: String
  cashbackId: String
  total: Int
  originalTotal: Int
  buyer: Account!
  seller: Account!
  service: Service
  cashback: Discount!
  discount: Cashback!
  insurance: Insurance
}

enum BookedServiceStatus {
  completed
  continuing
  restitute
  canceled_by_buyer
  pending
  paid
}

type MyBookings {
  take: Int!
  cursor: String
  data: [BookedService!]!
}

type Discount {
  id: ID!
}

type Cashback {
  id: ID!
}

type Query {
  getUserServices(userId: String!, pagination: GqlCursorPaginationInput!): ServicesCursorPaginationResponse!
  getServiceRawData(id: String!): RawService!
  getServiceDetails(id: String!, isClick: Boolean!): Service
  getUserServicesByIds(sellerId: String!, servicesIds: [String!]!): [Service!]!
  getRecommendedServices(args: GetRecommendedServicesInput!): ServicesCursorPaginationResponse!
  getHotelAvailablity(id: String!, monthDate: String!): HotelAvailablity!
  getBookingCost(args: GetBookingCostInput!): BookingCost
  adminGetAccountService(accountId: String!): Service!
  adminGetDishs(args: AdminGetDishsInput!): [Dish!]!
  getInsurances(args: GetInsurancesInput!): [Insurance!]!
  getServiceInsuranceHistory(args: GetInsurancesHistoryInput!): [Insurance!]!
  getFilteredServices(args: GetFilteredServicesAdminInput!): [ServiceDiscovery!]!
  adminGetRawService(id: String!): ServiceShopRaw
  getServiceCategoryById(categoryId: String!): ServiceCategory!
  getServiceCategoryByType(type: ServiceType!): [ServiceCategory!]!
  getServiceCategories: [ServiceCategory!]!
  getFilteredServiceCategories(args: GetFilteredCategoriesInput): [ServiceCategory!]!
  adminGetUserBookings(args: GetMyBookingsInput!, accountId: String!): [BookedService!]!
  getMyBookings(args: GetMyBookingsInput!): MyBookings!
  getBookedServiceDetails(id: String!): BookedService!
  getUserBookingHistory(args: GetBookingsHistoryAdminInput!): [BookedService!]!
  adminGetAccountBookingHistory(args: GetBookingsHistoryInput!, accountId: String!, accountType: String!): [BookedService!]!
  getBookingHistory(args: GetBookingsHistoryInput!): [BookedService!]!
  adminGetBookings(args: AdminGetBookingsInput!): [BookedService!]!
}

input GqlCursorPaginationInput {
  take: Int!
  cursor: String
}

input GetRecommendedServicesInput {
  take: Int!
  cursor: String
  type: ServiceType!
}

input GetBookingCostInput {
  servicesIds: [String!]!
  extrasIds: [String!]
  checkinDate: String!
  checkinTime: String
  checkoutDate: String
  adults: Int
  children: Int
}

input AdminGetDishsInput {
  name: String
  seller: String
  type: RestaurantDishType
  country: String
  city: String
  sales: Int
  pagination: GqlPaginationInput!
}

input GqlPaginationInput {
  page: Int!
  take: Int!
}

input GetInsurancesInput {
  pagination: GqlPaginationInput!
  status: ServiceInsuranceStatusEnum!
}

input GetInsurancesHistoryInput {
  id: ID
  thumbnail: String
  seller: String
  buyer: String
  service: String
  status: ServiceInsuranceStatusEnum
  amount: Float
  pagination: GqlPaginationInput!
}

input GetFilteredServicesAdminInput {
  id: ID
  title: String
  sellerName: String
  sellerId: ID
  price: Float
  status: ServiceStatus
  updatedAt: String
  type: ServiceType!
  pagination: GqlPaginationInput!
}

input GetFilteredCategoriesInput {
  name: String
  sortOrder: String
}

input GetMyBookingsInput {
  date: String!
  days: Int!
}

input GetBookingsHistoryAdminInput {
  status: BookedServiceStatus
  pagination: GqlPaginationInput!
  q: String!
  userId: ID!
  accountType: String!
}

input GetBookingsHistoryInput {
  status: BookedServiceStatus
  pagination: GqlPaginationInput!
  q: String!
}

input AdminGetBookingsInput {
  id: String
  type: String
  seller: String
  buyer: String
  status: BookedServiceStatus
  total: Float
  dateAdded: String
  pagination: GqlPaginationInput!
}

type Mutation {
  uploadFile(file: TestUploadFile!): Boolean!
  createService(args: CreateServiceInput!): Boolean!
  deleteService(id: String!): Boolean!
  adminUpdateServiceById(args: UpdateServiceInput!): Boolean!
  requestInsurancePayBack(bookId: ID!): Boolean!
  refuseInsurancePayBackRequest(bookId: ID!): Boolean!
  acceptInsurancePayBackRequest(bookId: ID!): Boolean!
  refundInsurance(id: ID!): Boolean!
  updateHotelAdmin(args: updateHotelAdminInput!): Boolean!
  updateRestaurantAdmin(args: updateRestaurantAdminInput!): Boolean!
  updateHealthCenterAdmin(args: updateHealthCenterAdminInput!): Boolean!
  updateBeautyCenterAdmin(args: updateBeautyCenterAdminInput!): Boolean!
  updateVehicleAdmin(args: updateVehicleAdminInput!): Boolean!
  adminDeleteService(args: AdminDeleteServiceInput!): Boolean!
  createServiceCategory(createServiceCategoryArgs: CreateServiceCategoryInput!): ServiceCategory!
  updateServiceCategory(updateServiceCategoryArgs: UpdateServiceCategoryInput!): ServiceCategory!
  removeServiceCategory(serviceCategoryId: String!): ServiceCategory!
  cancelServiceReservation(id: String!): Boolean!
  acceptAppointment(id: ID!): Boolean!
  declineAppointment(args: DeclineAppointmentInput!): Boolean!
  BookService(args: BookServiceInput!): BookedService!
}

input TestUploadFile {
  file: Upload!
  test: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateServiceInput {
  price: Float!
  name: [TranslationTextInput!]!
  description: [TranslationTextInput!]!
  policies: [ServicePolicyTranslatedInput!]!
  cancelable: Boolean!
  cancelationPolicy: ServiceCancelationType
  vat: Float!
  thumbnail: Upload!
  hashtags: [String!]!
  popularAmenities: [TranslationTextInput!]
  extras: [ServiceExtraInput!]
  includedAmenities: [TranslationTextInput!]
  dailyPrice: Boolean
  dailyPrices: ServiceDailyPricesInput
  beds: Int
  bathrooms: Int
  num_of_rooms: Int
  measurements: ServicePropertyMeasurementsInput
  adaptedFor: [ServiceAdaptation!]
  restriction: [ServiceRestriction!]
  deposit: Boolean
  depositAmount: Int
  units: Int
  typeOfPlace: RentalTypeOfPlace
  propertyType: RentalPropertyType
  cleaningFee: Float
  brand: String
  model: String
  seats: Int
  windows: Int
  maxSpeedInKm: Int
  lugaggeCapacity: Int
  gpsAvailable: Boolean
  airCondition: Boolean
  vehicleCategoryId: String
  treatmentCategoryId: ID
  duration: Int
  specialityId: ID
  speakingLanguages: [DoctorSpeakingLanguage!]!
  availableAppointments: [String!]
  sessionDurationMins: Int
  ingredients: [TranslationTextArrayInput!]
  menuType: RestaurantDishType
}

input TranslationTextInput {
  langId: String!
  value: String!
}

input ServicePolicyTranslatedInput {
  langId: String!
  value: [ServicePolicyInput!]!
}

input ServicePolicyInput {
  policyTitle: String!
  terms: [String!]!
}

input ServiceExtraInput {
  name: [ServiceExtraNameTranslationInput!]!
  cost: Int!
}

input ServiceExtraNameTranslationInput {
  langId: String!
  value: String!
}

input ServiceDailyPricesInput {
  mo: Int!
  tu: Int!
  we: Int!
  th: Int!
  fr: Int!
  sa: Int!
  su: Int!
}

input ServicePropertyMeasurementsInput {
  inFeet: Int!
  inMeter: Int!
}

input TranslationTextArrayInput {
  langId: String!
  value: [String!]!
}

input UpdateServiceInput {
  price: Float
  name: [TranslationTextInput!]
  description: [TranslationTextInput!]
  policies: [ServicePolicyTranslatedInput!]
  cancelable: Boolean
  cancelationPolicy: ServiceCancelationType
  vat: Float
  thumbnail: Upload
  hashtags: [String!]
  popularAmenities: [TranslationTextInput!]
  extras: [ServiceExtraInput!]
  includedAmenities: [TranslationTextInput!]
  dailyPrice: Boolean
  dailyPrices: ServiceDailyPricesInput
  beds: Int
  bathrooms: Int
  num_of_rooms: Int
  measurements: ServicePropertyMeasurementsInput
  adaptedFor: [ServiceAdaptation!]
  restriction: [ServiceRestriction!]
  deposit: Boolean
  depositAmount: Int
  units: Int
  typeOfPlace: RentalTypeOfPlace
  propertyType: RentalPropertyType
  cleaningFee: Float
  brand: String
  model: String
  seats: Int
  windows: Int
  maxSpeedInKm: Int
  lugaggeCapacity: Int
  gpsAvailable: Boolean
  airCondition: Boolean
  vehicleCategoryId: String
  treatmentCategoryId: ID
  duration: Int
  specialityId: ID
  speakingLanguages: [DoctorSpeakingLanguage!]
  availableAppointments: [String!]
  sessionDurationMins: Int
  ingredients: [TranslationTextArrayInput!]
  menuType: RestaurantDishType
  id: String!
}

input updateHotelAdminInput {
  presentations: [ServicePresentationInput!]
  location: ServiceLocationInput
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  rooms: [UpdateHotelRoomAdminInput!]
  id: ID!
}

input ServicePresentationInput {
  type: ServicePresentationType!
  src: String!
}

input ServiceLocationInput {
  address: String!
  country: String!
  state: String!
  city: String!
  lat: Float!
  lon: Float!
  postalCode: Int!
}

input ServiceMetaInfoTranslationInput {
  langId: String!
  value: ServiceMetaInfoInput!
}

input ServiceMetaInfoInput {
  title: String!
  description: String!
  metaTagDescription: String!
  metaTagKeywords: [String!]!
  hashtags: [String!]!
}

input UpdateHotelRoomAdminInput {
  roomMetaInfo: [HotelRoomTranslationMetaInfoInput!]
  pricePerNight: Int
  dailyPrice: Boolean
  dailyPrices: ServiceDailyPricesInput
  discount: ServiceDiscountInput
  includedServices: [ServiceIncludedServicesInput!]
  popularAmenities: [ServiceAmenitiesInput!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  beds: Int
  bathrooms: Int
  extras: [ServiceExtraInput!]
  num_of_rooms: Int
  includedAmenities: [ServiceIncludedAmenitiesInput!]
  measurements: ServicePropertyMeasurementsInput
  insurance: Float
  presentations: [ServicePresentationInput!]
  id: ID!
}

input HotelRoomTranslationMetaInfoInput {
  langId: String!
  value: HotelRoomMetaInfoInput!
}

input HotelRoomMetaInfoInput {
  title: String!
  description: String!
}

input ServiceDiscountInput {
  value: Int!
  units: Int!
}

input ServiceIncludedServicesInput {
  langId: String!
  value: [String!]!
}

input ServiceAmenitiesInput {
  value: String!
  label: [ServiceAmenitiesLabelTranslationInput!]!
}

input ServiceAmenitiesLabelTranslationInput {
  langId: String!
  value: String!
}

input ServiceCancelationPolicyInput {
  duration: Int!
  cost: Int!
}

input ServiceIncludedAmenitiesInput {
  langId: String!
  value: [String!]!
}

input updateRestaurantAdminInput {
  vat: Int
  status: ServiceStatus
  location: ServiceLocationInput
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  menus: [UpdateRestaurantMenuInput!]
  establishmentTypeId: ID
  cuisinesTypeId: ID
  setting_and_ambianceId: ID
  michelin_guide_stars: Int
  dishs: [UpdateRestaurantMenuDishInput!]
  id: ID!
}

input UpdateRestaurantMenuInput {
  id: ID!
  name: [TranslationTextInput!]!
  dishs: [UpdateRestaurantMenuDishInput!]!
}

input UpdateRestaurantMenuDishInput {
  id: ID!
  name: [TranslationTextInput!]!
  price: Int!
  ingredients: [TranslationTextArrayInput!]!
  thumbnail: String!
}

input updateHealthCenterAdminInput {
  vat: Float
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  status: ServiceStatus
  id: ID!
}

input updateBeautyCenterAdminInput {
  vat: Float
  beauty_center_typeId: ID
  title: [TranslationTextInput!]
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  type_of_seller: ServiceTypeOfSeller
  treatments: [UpdateBeautyCenterTreatmentInput!]
  id: ID!
}

input UpdateBeautyCenterTreatmentInput {
  treatmentCategoryId: ID
  title: [TranslationTextInput!]
  price: Float
  duration: [Int!]
  discount: ServiceDiscountInput
  thumbnail: Upload
  id: ID!
}

input updateVehicleAdminInput {
  typeId: ID
  title: [TranslationTextInput!]
  presentations: [ServicePresentationInput!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  brand: String
  model: String
  price: Float
  properties: CreateVehiclePropertiesInput
  insurance: Float
  id: ID!
}

input CreateVehiclePropertiesInput {
  seats: Int!
  windows: Int!
  maxSpeedInKm: Int!
  lugaggeCapacity: Int!
  gpsAvailable: Boolean!
  airCondition: Boolean!
}

input AdminDeleteServiceInput {
  id: ID!
  deletionReason: String!
}

input CreateServiceCategoryInput {
  name: [TranslationTextInput!]!
  filters: [ServiceCategoryFilterValueInput!]!
  type: ServiceType!
  sortOrder: Int!
  thumbnail: String!
  description: TranslationTextInput!
  metaTagDescription: TranslationTextInput!
  metaTagTitle: TranslationTextInput!
  metaTagKeywords: TranslationTextInput!
  seo: TranslationTextInput!
}

input ServiceCategoryFilterValueInput {
  name: [TranslationTextInput!]!
  filteringValue: String!
  sortOrder: Int!
}

input UpdateServiceCategoryInput {
  name: [TranslationTextInput!]
  filters: [ServiceCategoryFilterValueInput!]
  type: ServiceType
  sortOrder: Int
  thumbnail: String
  description: TranslationTextInput
  metaTagDescription: TranslationTextInput
  metaTagTitle: TranslationTextInput
  metaTagKeywords: TranslationTextInput
  seo: TranslationTextInput
  id: String!
  status: ServiceCategoryStatus
}

input DeclineAppointmentInput {
  id: ID!
  reason: String!
}

input BookServiceInput {
  checkout: DateTime!
  extrasIds: ID!
  treatmentsIds: ID!
  dishsIds: ID!
  serviceId: ID!
  checkin: DateTime!
  guests: Int!
}
