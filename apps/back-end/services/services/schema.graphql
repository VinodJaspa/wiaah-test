# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type ServicePresentation {
  type: ServicePresentationType!
  src: String!
}

enum ServicePresentationType {
  img
  vid
}

type ServicePolicy {
  policyTitle: String!
  terms: [String!]!
}

type ServiceTranslationPolicy {
  langId: String!
  value: [ServicePolicy!]!
}

type ServiceMetaInfo {
  title: String!
  description: String!
  metaTagDescription: String!
  metaTagKeywords: [String!]!
  hashtags: [String!]!
}

type ServiceMetaInfoTranslation {
  langId: String!
  value: ServiceMetaInfo!
}

type ServiceDailyPrices {
  mo: Int!
  tu: Int!
  we: Int!
  th: Int!
  fr: Int!
  sa: Int!
  su: Int!
}

type ServiceDiscount {
  value: Float!
  units: Int!
}

type ServiceAmenity {
  value: String!
  label: String!
}

type ServiceCancelationPolicy {
  duration: Int!
  cost: Int!
}

type ServiceExtra {
  name: String!
  cost: Int!
}

type ServicePropertyMeasurements {
  inFeet: Int!
  inMeter: Int!
}

type TranslationText {
  langId: String!
  value: String!
}

type ServiceLocation {
  address: String!
  country: String!
  state: String!
  city: String!
  lat: Float!
  lon: Float!
  postalCode: Int!
}

type HotelRoom {
  id: ID!
  hotel: Hotel
  hotelId: ID!
  sellerId: ID!
  title: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  pricePerNight: Int!
  dailyPrice: Boolean!
  presentations: [ServicePresentation!]!
  dailyPrices: ServiceDailyPrices
  rating: Float!
  reviews: Int!
  discount: ServiceDiscount!
  includedServices: [String!]
  popularAmenities: [ServiceAmenity!]
  cancelationPolicies: [ServiceCancelationPolicy!]!
  extras: [ServiceExtra!]
  includedAmenities: [String!]
  beds: Int!
  bathrooms: Int!
  num_of_rooms: Int!
  measurements: ServicePropertyMeasurements!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ServiceDayWorkingHours {
  periods: [String!]!
}

type SpecialDayWorkingHours {
  date: String!
  workingHours: ServiceDayWorkingHours!
}

type WeekdaysWorkingHours {
  mo: ServiceDayWorkingHours
  tu: ServiceDayWorkingHours
  we: ServiceDayWorkingHours
  th: ServiceDayWorkingHours
  fr: ServiceDayWorkingHours
  sa: ServiceDayWorkingHours
  su: ServiceDayWorkingHours
}

type WorkingSchedule {
  id: ID!
  weekdays: WeekdaysWorkingHours!
  specialDays: [SpecialDayWorkingHours!]!
}

type ServiceContact {
  address: String!
  country: String!
  state: String
  city: String!
  email: String!
  phone: String!
}

type Account {
  id: ID!
}

type Hotel {
  owner: Account!
  id: ID!
  ownerId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  location: ServiceLocation!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  rooms: [HotelRoom!]!
  contact: ServiceContact!
  workingHours: WorkingSchedule
}

type ServiceCategoryFilterValue {
  name: [TranslationText!]!
  filteringValue: String!
  sortOrder: Int!
}

type ServiceCategoryFilter {
  filterGroupName: [TranslationText!]!
  filteringKey: String!
  sortOrder: Int!
  filterValues: [ServiceCategoryFilterValue!]!
}

type ServiceCategory {
  id: ID!
  name: [TranslationText!]!
  sortOrder: Int!
  status: ServiceCategoryStatus!
  slug: String!
  filters: [ServiceCategoryFilter!]!
  thumbnail: String!
  description: [TranslationText!]!
  metaTagDescription: [TranslationText!]!
  metaTagTitle: [TranslationText!]!
  metaTagKeywords: [TranslationText!]!
  seo: [TranslationText!]!
}

enum ServiceCategoryStatus {
  active
  inActive
}

type RestaurantMenu {
  id: ID!
  name: String!
  dishs: [Dish!]!
}

type Dish {
  id: ID!
  name: String!
  price: Float!
  ingredients: [String!]!
  thumbnail: String!
}

type Restaurant {
  owner: Account!
  contact: ServiceContact!
  workingHours: WorkingSchedule
  id: ID!
  ownerId: ID!
  vat: Int!
  status: ServiceStatus!
  location: ServiceLocation!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  rating: Float!
  reviews: Int!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  payment_methods: [ServicePaymentMethod!]!
  menus: [RestaurantMenu!]!
  lowest_price: Float!
  highest_price: Float!
  setting_and_ambianceId: ID!
  establishmentTypeId: ID!
  cuisinesTypeId: ID!
  michelin_guide_stars: Int!
}

enum ServiceStatus {
  inActive
  active
  suspended
}

enum ServicePaymentMethod {
  credit_card
  visa
  mastercard
  check
  cash
}

type HealthCenterSpecialty {
  id: ID!
  doctors: [Doctor!]
  name: String!
  description: String!
}

type Doctor {
  id: ID!
  healthCenter: HealthCenter
  speciality: HealthCenterSpecialty
  healthCenterId: ID!
  specialityId: ID!
  rating: Float!
  name: String!
  thumbnail: String!
  price: Float!
  description: String!
  availablityStatus: HealthCenterDoctorAvailablityStatus!
}

enum HealthCenterDoctorAvailablityStatus {
  available
  unavailable
}

type HealthCenter {
  owner: Account
  contact: ServiceContact!
  id: ID!
  ownerId: ID!
  vat: Float!
  rating: Float!
  totalReviews: Int!
  location: ServiceLocation!
  status: ServiceStatus!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  payment_methods: [ServicePaymentMethod!]!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  doctors: [Doctor!]!
  workingHours: WorkingSchedule!
}

type BeautyCenterTreatmentCategory {
  id: ID!
  createdById: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
}

type Treatment {
  id: ID!
  treatmentCategoryId: ID!
  category: BeautyCenterTreatmentCategory
  title: String!
  price: Float!
  duration: [Int!]!
  discount: ServiceDiscount!
  thumbnail: String!
  beautyCenterServiceId: ID!
}

type BeautyCenter {
  id: ID!
  contact: ServiceContact!
  ownerId: ID!
  owner: Account
  createdAt: DateTime!
  updatedAt: DateTime!
  vat: Float!
  rating: Float!
  totalReviews: Int!
  beauty_center_typeId: ID!
  status: ServiceStatus!
  title: String!
  location: ServiceLocation!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  payment_methods: [ServicePaymentMethod!]!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  type_of_seller: ServiceTypeOfSeller!
  treatments: [Treatment!]!
  workingHours: WorkingSchedule
}

enum ServiceTypeOfSeller {
  individual
  professional
}

type VehicleProperties {
  seats: Int!
  windows: Int!
  maxSpeedInKm: Int!
  lugaggeCapacity: Int!
  gpsAvailable: Boolean!
  airCondition: Boolean!
}

type Vehicle {
  id: ID!
  title: String!
  presentations: [ServicePresentation!]!
  brand: String!
  model: String!
  price: Int!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  properties: VehicleProperties!
}

type VehicleService {
  id: ID!
  ownerId: ID!
  owner: Account!
  workingHours: WorkingSchedule!
  contact: ServiceContact!
  createdAt: DateTime!
  updatedAt: DateTime!
  vat: Float!
  rating: Float!
  totalReviews: Int!
  location: ServiceLocation!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  payment_methods: [ServicePaymentMethod!]!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  vehicles: [Vehicle!]!
}

type Service {
  id: ID!
  serviceType: ServiceType!
  title: String!
  price: Float!
  rating: Float!
  thumbnail: String!
  presentation: [ServicePresentation!]
  hashtags: [String!]!
  location: ServiceLocation!
  contact: ServiceContact!
}

enum ServiceType {
  hotel
  holiday_rentals
  restaurant
  health_center
  beauty_center
  vehicle
}

type ServiceDetails {
  id: ID!
  ownerId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  location: ServiceLocation!
  presentations: [ServicePresentation!]!
  policies: [ServicePolicy!]!
  serviceMetaInfo: ServiceMetaInfo!
  contact: ServiceContact!
  lowest_price: Float!
  highest_price: Float!
  payment_methods: [ServicePaymentMethod!]!
  type_of_seller: ServiceTypeOfSeller!
  rooms: [HotelRoom!]
  menus: [RestaurantMenu!]
  setting_and_ambianceId: ID
  establishmentTypeId: ID
  cuisinesTypeId: ID
  michelin_guide_stars: Int
  doctors: [Doctor!]
  treatments: [Treatment!]
  vehicles: [Vehicle!]
}

type Insurance {
  id: ID!
  itemId: ID!
  buyerId: ID!
  sellerId: ID!
  itemType: String!
  amount: Float!
  status: ServiceInsuranceStatusEnum!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ServiceInsuranceStatusEnum {
  pending
  paid
  requested
  refused
  refunded
}

type ServiceDiscovery {
  id: ID!
  thumbnail: String!
  title: String!
  sellerName: String!
  sellerId: ID!
  price: [Float!]!
  type: ServiceType!
  status: ServiceStatus!
  updatedAt: String!
}

type ServiceShopRaw {
  id: ID!
  type: ServiceType!
  ownerId: ID!
  createdAt: String!
  updatedAt: String!
  status: ServiceStatus!
  presentations: [ServicePresentation!]!
  serviceMetaInfo: [ServiceMetaInfoTranslation!]!
  contact: ServiceContact!
  workingHours: WorkingSchedule
  policies: [ServiceTranslationPolicy!]!
  payment_methods: [ServicePaymentMethod!]!
  location: ServiceLocation!
  vat: Float!
  cancelationPolicies: [ServiceCancelationPolicy!]!
  lowest_price: Float!
  highest_price: Float!
  rating: Float!
  reviews: Int!
  type_of_seller: ServiceTypeOfSeller!
  suspensionReason: String
  rooms: [HotelRoom!]
  menus: [RestaurantMenu!]
  establishmentTypeId: String
  cuisinesTypeId: String
  setting_and_ambianceId: String
  michelin_guide_stars: Int
  doctors: [Doctor!]
  treatments: [Treatment!]
  vehicle: [Vehicle!]
}

type Query {
  getServiceDetails(id: String!): ServiceDetails
  adminGetAccountService(accountId: String!): Service!
  adminGetAccountWorkingSchedule(accountId: String!): WorkingSchedule!
  getMyWorkingSchedule: WorkingSchedule!
  getInsurances(args: GetInsurancesInput!): [Insurance!]!
  getServiceInsuranceHistory(args: GetInsurancesHistoryInput!): [Insurance!]!
  getFilteredServices(args: GetFilteredServicesAdminInput!): [ServiceDiscovery!]!
  adminGetRawService(id: String!): ServiceShopRaw
  getServiceCategoryById(categoryId: String!): ServiceCategory!
  getServiceCategoryBySlug(slug: String!): ServiceCategory!
  getServiceCategories: [ServiceCategory!]!
  getFilteredServiceCategories(args: GetFilteredCategoriesInput): [ServiceCategory!]!
  getHotels: [Hotel!]!
  getHotelService(getHotelServiceArgs: GetHotelServiceArgs!): Hotel!
  searchHotelRooms(searchHotelRoomsArgs: SearchHotelRoomLocationInput!): [HotelRoom!]!
  getRestaurants: [Restaurant!]!
  getRestaurant(getRestaurantArgs: GetRestaurantInput!): Restaurant!
  searchFilteredRestaurant(filtersInput: SearchFilteredRestaurantInput!): [Restaurant!]!
  getHealthCenter(serviceId: String!): HealthCenter!
  searchHealthCenters(searchHealthCenterArgs: SearchHealthCenterInput!): [HealthCenter!]!
  searchHealthCenterDoctors(searchHealthCenterArgs: SearchHealthCenterInput!): [Doctor!]!
  getBeautyCenterById(id: String!): BeautyCenter!
  getFilteredBeuatyCenterTreatments(args: SearchFilteredBeautyCenterInput!): [Treatment!]!
  getBeautyCenterTreatmentCategories: [BeautyCenterTreatmentCategory!]!
  getBeautyCenterTreatmentCategoriesByIds(ids: [String!]!): [BeautyCenterTreatmentCategory!]!
  getAllVehicles(args: GetVehiclesInput!): [VehicleService!]!
  getVehicleServicebyId(id: String!): VehicleService!
}

input GetInsurancesInput {
  pagination: GqlPaginationInput!
  status: ServiceInsuranceStatusEnum!
}

input GqlPaginationInput {
  page: Int!
  take: Int!
}

input GetInsurancesHistoryInput {
  id: ID
  thumbnail: String
  seller: String
  buyer: String
  service: String
  status: ServiceInsuranceStatusEnum
  amount: Float
  pagination: GqlPaginationInput!
}

input GetFilteredServicesAdminInput {
  id: ID
  title: String
  sellerName: String
  sellerId: ID
  price: Float
  status: ServiceStatus
  updatedAt: String
  type: ServiceType!
  pagination: GqlPaginationInput!
}

input GetFilteredCategoriesInput {
  name: String
  sortOrder: String
}

input GetHotelServiceArgs {
  id: ID!
}

input SearchHotelRoomLocationInput {
  pagination: GqlPaginationInput
  query: String
  property_type: String
  num_of_rooms: Int
  num_of_beds: Int
  hotel_class: Int
  rating: Int
  minPrice: Float
  maxPrice: Float
}

input GetRestaurantInput {
  id: ID!
}

input SearchFilteredRestaurantInput {
  pagination: GqlPaginationInput
  establishmentTypeId: ID
  cusinesTypeId: ID
  settingAndAmbinaceId: ID
  foodType: String
  paymentMethods: [ServicePaymentMethod!]
  rating: Int
  minPrice: Float
  maxPrice: Int
  query: String
}

input SearchHealthCenterInput {
  pagination: GqlPaginationInput
  query: String
  specialistType: String
  speakingLanguage: String
  payment_methods: [ServicePaymentMethod!]
  rate: Int
  minPrice: Float
  maxPrice: Float
}

input SearchFilteredBeautyCenterInput {
  pagination: GqlPaginationInput
  typeOfSeller: String
  beautyCenterTypeId: ID
  beautySalonTypeId: ID
  treatmentTypeId: ID
  cancelationOption: Boolean
  rating: Int
  minPrice: Float
  maxPrice: Float
  query: String
}

input GetVehiclesInput {
  pagination: GqlPaginationInput!
  q: String!
}

type Mutation {
  createService(args: CreateServiceInput!): Boolean!
  adminUpdateServiceById(args: UpdateServiceInput!): Boolean!
  adminUpdateAccountWorkingSchedule(args: UpdateWorkingScheduleInput!, accountId: String!): WorkingSchedule!
  updateMyWorkingSchedule(args: UpdateWorkingScheduleInput!): WorkingSchedule!
  requestInsurancePayBack(bookId: ID!): Boolean!
  refuseInsurancePayBackRequest(bookId: ID!): Boolean!
  acceptInsurancePayBackRequest(bookId: ID!): Boolean!
  updateHotelAdmin(args: updateHotelAdminInput!): Boolean!
  updateRestaurantAdmin(args: updateRestaurantAdminInput!): Boolean!
  updateHealthCenterAdmin(args: updateHealthCenterAdminInput!): Boolean!
  updateBeautyCenterAdmin(args: updateBeautyCenterAdminInput!): Boolean!
  updateVehicleAdmin(args: updateVehicleAdminInput!): Boolean!
  adminDeleteService(args: AdminDeleteServiceInput!): Boolean!
  createServiceCategory(createServiceCategoryArgs: CreateServiceCategoryInput!): ServiceCategory!
  updateServiceCategory(updateServiceCategoryArgs: UpdateServiceCategoryInput!): ServiceCategory!
  removeServiceCategory(serviceCategoryId: String!): ServiceCategory!
  createHotelService(createHotelServiceArgs: CreateHotelInput!): Hotel!
  createRestaurantService(createRestaurantArgs: CreateRestaurantInput!): Restaurant!
  updateRestaurant(updateRestaurantArgs: UpdateRestaurantInput!): Restaurant!
  deleteRestaurant(deleteRestaurantArgs: DeleteRestaurantInput!): Restaurant!
  activateRestaurant(id: Int!): Restaurant!
  createHealthCenter(createHealthCenterArgs: CreateHealthCenterInput!): HealthCenter!
  updateHealthCenter(updateHealthCenterArgs: UpdateHealthCenterInput!): HealthCenter!
  createHealthCenterSpeciality(createHealthCenterSpecialityArgs: CreateHealthCenterSpecialityInput!): HealthCenterSpecialty!
  createBeautyCenter(createBeautyCenterArgs: CreateBeautyCenterInput!): BeautyCenter!
  updateBeautyCenter(updateBeautyCenter: UpdateBeautyCenterInput!): BeautyCenter!
  deleteBeautyCenter(deleteBeautyCenter: DeleteTreatmentCategoryInput!): Boolean!
  createBeautyCenterTreatmentCategory(createBeautyCenterTreatmentCategory: CreateBeautyCenterTreatmentCategoryInput!): BeautyCenterTreatmentCategory!
  deleteBeautyCenterServices(deleteBeautyCenterServices: DeleteTreatmentCategoriesInput!): Boolean!
  updateTreatmentCategories(updateTreatmentCategoriesArgs: UpdateTreatmentCategoriesInput!): [BeautyCenterTreatmentCategory!]!
  createVehicle(createVehicleInput: CreateVehicleServiceInput!): VehicleService!
}

input CreateServiceInput {
  type: ServiceType!
  status: ServiceStatus!
  contact: ServiceContactInput!
  presentations: [Upload!]!
  location: ServiceLocationInput!
  policies: [ServicePolicyTranslatedInput!]!
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]!
  payment_methods: [ServicePaymentMethod!]!
  type_of_seller: ServiceTypeOfSeller!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  vat: Float!
  rooms: [ServiceHotelRoomInput!]
  menus: [ServiceRestaurantMenuInput!]
  establishmentTypeId: ID
  cuisinesTypeId: ID
  setting_and_ambianceId: ID
  michelin_guide_stars: Int
  doctors: [ServiceHealthCenterDoctorInput!]
  treatments: [CreateBeautyCenterTreatmentInput!]
  vehicles: [ServiceVehicleInput!]
}

input ServiceContactInput {
  address: String!
  country: String!
  state: String
  city: String!
  email: String!
  phone: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input ServiceLocationInput {
  address: String!
  country: String!
  state: String!
  city: String!
  lat: Float!
  lon: Float!
  postalCode: Int!
}

input ServicePolicyTranslatedInput {
  langId: String!
  value: [ServicePolicyInput!]!
}

input ServicePolicyInput {
  policyTitle: String!
  terms: [String!]!
}

input ServiceMetaInfoTranslationInput {
  langId: String!
  value: ServiceMetaInfoInput!
}

input ServiceMetaInfoInput {
  title: String!
  description: String!
  metaTagDescription: String!
  metaTagKeywords: [String!]!
  hashtags: [String!]!
}

input ServiceCancelationPolicyInput {
  duration: Int!
  cost: Int!
}

input ServiceHotelRoomInput {
  roomMetaInfo: [ServiceHotelRoomTranslationMetaInfoInput!]!
  pricePerNight: Int!
  dailyPrice: Boolean!
  dailyPrices: ServiceDailyPricesInput
  discount: ServiceDiscountInput!
  includedServices: [ServiceIncludedServicesInput!]!
  popularAmenities: [ServiceAmenitiesInput!]!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  beds: Int!
  bathrooms: Int!
  extras: [ServiceExtraInput!]!
  num_of_rooms: Int!
  includedAmenities: [ServiceIncludedAmenitiesInput!]!
  measurements: ServicePropertyMeasurementsInput!
  insurance: Float!
  presentations: [Upload!]!
}

input ServiceHotelRoomTranslationMetaInfoInput {
  langId: String!
  value: ServiceHotelRoomMetaInfoInput!
}

input ServiceHotelRoomMetaInfoInput {
  title: String!
  description: String!
}

input ServiceDailyPricesInput {
  mo: Int!
  tu: Int!
  we: Int!
  th: Int!
  fr: Int!
  sa: Int!
  su: Int!
}

input ServiceDiscountInput {
  value: Int!
  units: Int!
}

input ServiceIncludedServicesInput {
  langId: String!
  value: [String!]!
}

input ServiceAmenitiesInput {
  value: String!
  label: [ServiceAmenitiesLabelTranslationInput!]!
}

input ServiceAmenitiesLabelTranslationInput {
  langId: String!
  value: String!
}

input ServiceExtraInput {
  name: [ServiceExtraNameTranslationInput!]!
  cost: Int!
}

input ServiceExtraNameTranslationInput {
  langId: String!
  value: String!
}

input ServiceIncludedAmenitiesInput {
  langId: String!
  value: [String!]!
}

input ServicePropertyMeasurementsInput {
  inFeet: Int!
  inMeter: Int!
}

input ServiceRestaurantMenuInput {
  name: [TranslationTextInput!]!
  dishs: [ServiceRestaurantMenuDishInput!]!
}

input TranslationTextInput {
  langId: String!
  value: String!
}

input ServiceRestaurantMenuDishInput {
  name: [TranslationTextInput!]!
  price: Int!
  ingredients: [TranslationTextArrayInput!]!
  thumbnail: Upload!
}

input TranslationTextArrayInput {
  langId: String!
  value: [String!]!
}

input ServiceHealthCenterDoctorInput {
  specialityId: ID!
  name: String!
  thumbnail: Upload!
  price: Float!
  description: [TranslationTextInput!]!
  availablityStatus: HealthCenterDoctorAvailablityStatus!
}

input CreateBeautyCenterTreatmentInput {
  treatmentCategoryId: ID!
  title: [TranslationTextInput!]!
  price: Float!
  duration: [Int!]!
  discount: ServiceDiscountInput!
}

input ServiceVehicleInput {
  typeId: ID!
  title: [TranslationTextInput!]!
  presentations: [Upload!]!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  brand: String!
  model: String!
  price: Float!
  properties: CreateVehiclePropertiesInput!
  insurance: Float!
}

input CreateVehiclePropertiesInput {
  seats: Int!
  windows: Int!
  maxSpeedInKm: Int!
  lugaggeCapacity: Int!
  gpsAvailable: Boolean!
  airCondition: Boolean!
}

input UpdateServiceInput {
  type: ServiceType
  status: ServiceStatus
  contact: ServiceContactInput
  presentations: [Upload!]
  location: ServiceLocationInput
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  type_of_seller: ServiceTypeOfSeller
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  vat: Float
  rooms: [ServiceHotelRoomInput!]
  menus: [ServiceRestaurantMenuInput!]
  establishmentTypeId: ID
  cuisinesTypeId: ID
  setting_and_ambianceId: ID
  michelin_guide_stars: Int
  doctors: [ServiceHealthCenterDoctorInput!]
  treatments: [CreateBeautyCenterTreatmentInput!]
  vehicles: [ServiceVehicleInput!]
  id: String!
}

input UpdateWorkingScheduleInput {
  weekdays: UpdateWeekdaysWorkingHoursInput
  specialDays: [SpecialDayWorkingHoursInput!]
}

input UpdateWeekdaysWorkingHoursInput {
  mo: ServiceDayWorkingHoursInput
  tu: ServiceDayWorkingHoursInput
  we: ServiceDayWorkingHoursInput
  th: ServiceDayWorkingHoursInput
  fr: ServiceDayWorkingHoursInput
  sa: ServiceDayWorkingHoursInput
  su: ServiceDayWorkingHoursInput
}

input ServiceDayWorkingHoursInput {
  periods: [String!]!
}

input SpecialDayWorkingHoursInput {
  date: String!
  workingHours: ServiceDayWorkingHoursInput!
}

input updateHotelAdminInput {
  presentations: [ServicePresentationInput!]
  location: ServiceLocationInput
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  rooms: [UpdateHotelRoomAdminInput!]
  id: ID!
}

input ServicePresentationInput {
  type: ServicePresentationType!
  src: String!
}

input UpdateHotelRoomAdminInput {
  roomMetaInfo: [HotelRoomTranslationMetaInfoInput!]
  pricePerNight: Int
  dailyPrice: Boolean
  dailyPrices: ServiceDailyPricesInput
  discount: ServiceDiscountInput
  includedServices: [ServiceIncludedServicesInput!]
  popularAmenities: [ServiceAmenitiesInput!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  beds: Int
  bathrooms: Int
  extras: [ServiceExtraInput!]
  num_of_rooms: Int
  includedAmenities: [ServiceIncludedAmenitiesInput!]
  measurements: ServicePropertyMeasurementsInput
  insurance: Float
  presentations: [ServicePresentationInput!]
  id: ID!
}

input HotelRoomTranslationMetaInfoInput {
  langId: String!
  value: HotelRoomMetaInfoInput!
}

input HotelRoomMetaInfoInput {
  title: String!
  description: String!
}

input updateRestaurantAdminInput {
  vat: Int
  status: ServiceStatus
  location: ServiceLocationInput
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  menus: [UpdateRestaurantMenuInput!]
  establishmentTypeId: ID
  cuisinesTypeId: ID
  setting_and_ambianceId: ID
  michelin_guide_stars: Int
  dishs: [UpdateRestaurantMenuDishInput!]
  id: ID!
}

input UpdateRestaurantMenuInput {
  id: ID!
  name: [TranslationTextInput!]!
  dishs: [UpdateRestaurantMenuDishInput!]!
}

input UpdateRestaurantMenuDishInput {
  id: ID!
  name: [TranslationTextInput!]!
  price: Int!
  ingredients: [TranslationTextArrayInput!]!
  thumbnail: String!
}

input updateHealthCenterAdminInput {
  vat: Float
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  status: ServiceStatus
  id: ID!
}

input updateBeautyCenterAdminInput {
  vat: Float
  beauty_center_typeId: ID
  title: [TranslationTextInput!]
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  type_of_seller: ServiceTypeOfSeller
  treatments: [UpdateBeautyCenterTreatmentInput!]
  id: ID!
}

input UpdateBeautyCenterTreatmentInput {
  treatmentCategoryId: ID
  title: [TranslationTextInput!]
  price: Float
  duration: [Int!]
  discount: ServiceDiscountInput
  id: ID!
}

input updateVehicleAdminInput {
  typeId: ID
  title: [TranslationTextInput!]
  presentations: [ServicePresentationInput!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  brand: String
  model: String
  price: Float
  properties: CreateVehiclePropertiesInput
  insurance: Float
  id: ID!
}

input AdminDeleteServiceInput {
  id: ID!
  deletionReason: String!
}

input CreateServiceCategoryInput {
  name: [TranslationTextInput!]!
  filters: [ServiceCategoryFilterInput!]!
  slug: String!
  sortOrder: Int!
  thumbnail: String!
  description: TranslationTextInput!
  metaTagDescription: TranslationTextInput!
  metaTagTitle: TranslationTextInput!
  metaTagKeywords: TranslationTextInput!
  seo: TranslationTextInput!
}

input ServiceCategoryFilterInput {
  filterGroupName: [TranslationTextInput!]!
  filteringKey: String!
  sortOrder: Int!
  filterValues: [ServiceCategoryFilterValueInput!]!
}

input ServiceCategoryFilterValueInput {
  name: [TranslationTextInput!]!
  filteringValue: String!
  sortOrder: Int!
}

input UpdateServiceCategoryInput {
  name: [TranslationTextInput!]
  filters: [ServiceCategoryFilterInput!]
  slug: String
  sortOrder: Int
  thumbnail: String
  description: TranslationTextInput
  metaTagDescription: TranslationTextInput
  metaTagTitle: TranslationTextInput
  metaTagKeywords: TranslationTextInput
  seo: TranslationTextInput
  id: String!
  status: ServiceCategoryStatus
}

input CreateHotelInput {
  contact: ServiceContactInput!
  presentations: [ServicePresentationInput!]!
  location: ServiceLocationInput!
  policies: [ServicePolicyTranslatedInput!]!
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]!
  rooms: [HotelRoomInput!]!
}

input HotelRoomInput {
  roomMetaInfo: [HotelRoomTranslationMetaInfoInput!]!
  pricePerNight: Int!
  dailyPrice: Boolean!
  dailyPrices: ServiceDailyPricesInput
  discount: ServiceDiscountInput!
  includedServices: [ServiceIncludedServicesInput!]!
  popularAmenities: [ServiceAmenitiesInput!]!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  beds: Int!
  bathrooms: Int!
  extras: [ServiceExtraInput!]!
  num_of_rooms: Int!
  includedAmenities: [ServiceIncludedAmenitiesInput!]!
  measurements: ServicePropertyMeasurementsInput!
  insurance: Float!
  presentations: [ServicePresentationInput!]!
}

input CreateRestaurantInput {
  contact: ServiceContactInput!
  vat: Int!
  status: ServiceStatus
  location: ServiceLocationInput!
  presentations: [ServicePresentationInput!]!
  policies: [ServicePolicyTranslatedInput!]!
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]!
  menus: [RestaurantMenuInput!]!
  establishmentTypeId: ID!
  cuisinesTypeId: ID!
  setting_and_ambianceId: ID!
  michelin_guide_stars: Int!
}

input RestaurantMenuInput {
  name: [TranslationTextInput!]!
  dishs: [RestaurantMenuDishInput!]!
}

input RestaurantMenuDishInput {
  name: [TranslationTextInput!]!
  price: Int!
  ingredients: [TranslationTextArrayInput!]!
  thumbnail: String!
}

input UpdateRestaurantInput {
  vat: Int
  status: ServiceStatus
  location: ServiceLocationInput
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  menus: [UpdateRestaurantMenuInput!]
  establishmentTypeId: ID
  cuisinesTypeId: ID
  setting_and_ambianceId: ID
  michelin_guide_stars: Int
  dishs: [UpdateRestaurantMenuDishInput!]
  id: ID!
}

input DeleteRestaurantInput {
  id: String!
}

input CreateHealthCenterInput {
  vat: Float!
  presentations: [ServicePresentationInput!]!
  policies: [ServicePolicyTranslatedInput!]!
  location: ServiceLocationInput!
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]!
  payment_methods: [ServicePaymentMethod!]!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  contact: ServiceContactInput!
  doctors: [HealthCenterDoctorInput!]!
}

input HealthCenterDoctorInput {
  specialityId: ID!
  name: String!
  thumbnail: String!
  price: Float!
  description: [TranslationTextInput!]!
  availablityStatus: HealthCenterDoctorAvailablityStatus!
}

input UpdateHealthCenterInput {
  vat: Float
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  status: ServiceStatus
  id: ID!
}

input CreateHealthCenterSpecialityInput {
  name: [TranslationTextInput!]!
  description: [TranslationTextInput!]!
}

input CreateBeautyCenterInput {
  vat: Float!
  beauty_center_typeId: ID!
  title: [TranslationTextInput!]!
  location: ServiceLocationInput!
  presentations: [ServicePresentationInput!]!
  policies: [ServicePolicyTranslatedInput!]!
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]!
  payment_methods: [ServicePaymentMethod!]!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  type_of_seller: ServiceTypeOfSeller!
  treatments: [CreateBeautyCenterTreatmentInput!]!
}

input UpdateBeautyCenterInput {
  vat: Float
  beauty_center_typeId: ID
  title: [TranslationTextInput!]
  presentations: [ServicePresentationInput!]
  policies: [ServicePolicyTranslatedInput!]
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]
  payment_methods: [ServicePaymentMethod!]
  cancelationPolicies: [ServiceCancelationPolicyInput!]
  type_of_seller: ServiceTypeOfSeller
  treatments: [UpdateBeautyCenterTreatmentInput!]
  id: ID!
}

input DeleteTreatmentCategoryInput {
  id: ID!
}

input CreateBeautyCenterTreatmentCategoryInput {
  title: [TranslationTextInput!]!
}

input DeleteTreatmentCategoriesInput {
  ids: [ID!]!
}

input UpdateTreatmentCategoriesInput {
  title: [TranslationTextInput!]
  ids: [ID!]!
}

input CreateVehicleServiceInput {
  contact: ServiceContactInput!
  vat: Float!
  location: ServiceLocationInput!
  presentations: [ServicePresentationInput!]!
  policies: [ServicePolicyTranslatedInput!]!
  serviceMetaInfo: [ServiceMetaInfoTranslationInput!]!
  payment_methods: [ServicePaymentMethod!]!
  vehicles: [CreateVehicleInput!]!
}

input CreateVehicleInput {
  typeId: ID!
  title: [TranslationTextInput!]!
  presentations: [ServicePresentationInput!]!
  cancelationPolicies: [ServiceCancelationPolicyInput!]!
  brand: String!
  model: String!
  price: Float!
  properties: CreateVehiclePropertiesInput!
  insurance: Float!
}
