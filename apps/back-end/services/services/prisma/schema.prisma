// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ServiceCategoryFilterValue {
  name           TranslationText[]
  filteringValue String
  sortOrder      Int
}

type ServiceCategoryFilter {
  filterGroupName TranslationText[]
  filteringKey    String
  filterValues    ServiceCategoryFilterValue[]
  sortOrder       Int
}

model ServiceCategory {
  id                 String                  @id @default(auto()) @map("_id") @db.ObjectId
  createdByUserId    String
  name               TranslationText[]
  description        TranslationText[]
  metaTagDescription TranslationText[]
  metaTagTitle       TranslationText[]
  metaTagKeywords    TranslationText[]
  seo                TranslationText[]
  thumbnail          String
  createdAt          DateTime                @default(now())
  updatedAt          DateTime                @updatedAt()
  filters            ServiceCategoryFilter[]
  status             ServiceCategoryStatus   @default(active)
  sortOrder          Int                     @default(1)
  slug               String                  @unique
}

enum ServiceCategoryStatus {
  active
  inActive
}

model ServiceWorkingSchedule {
  id           String                          @id @map("_id") @db.ObjectId
  weekdays     ServiceWeekDaysWorkingHours?
  specialDays  ServiceSpecialWorkingHoursDay[]
  HotelService HotelService[]
}

model ServiceOwnerShip {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  ownerId     String      @unique @db.ObjectId
  serviceId   String      @unique @db.ObjectId
  serviceType ServiceType
}

// ------------------------------------------------services------------------------------------------------------------

model Service {
  id                  String                       @id @default(auto()) @map("_id") @db.ObjectId
  ownerId             String                       @unique @db.ObjectId
  dayClicksId         String?
  createdAt           DateTime                     @default(now())
  updatedAt           DateTime                     @updatedAt
  status              ServiceStatus                @default(inActive)
  presentations       ServicePresentation[]
  serviceMetaInfo     ServiceMetaTranslationInfo[]
  policies            ServiceTranslationPolicies[]
  payment_methods     ServicePaymentMethods[]
  location            Location
  vat                 Int
  cancelationPolicies ServiceCancelationPolicy[]
  lowest_price        Float                        @default(0)
  highest_price       Float                        @default(0)
  suspensionReason    String?

  // // hotel
  // rooms HotelRoom[]

  // // restaurant
  // menus                  RestaurantMenu[]
  // establishmentTypeId    String?          @db.ObjectId
  // cuisinesTypeId         String?          @db.ObjectId
  // setting_and_ambianceId String?          @db.ObjectId
  // michelin_guide_stars   Int?

  // // health center
  // doctors HealthCenterDoctor[]

  // // beauty center
  // treatments BeautyCenterTreatment[]

  // // vehicle
  // vehicles   Vehicle[]
  // discountId String?
  // cashbackId String?
}

model ServiceDayClicks {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clicks    Int      @default(0)
  serviceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VehicleType {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  createdById String            @db.ObjectId
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  name        TranslationText[]
}

model BeautyCenterTreatmentCategory {
  id          String                  @id @default(auto()) @map("_id") @db.ObjectId
  createdById String
  createdAt   DateTime                @default(now())
  updatedAt   DateTime                @updatedAt
  title       TranslationText[]
  status      TreatmentCategoryStatus @default(active)
}

model HealthCenterDoctor {
  id                String                               @id @default(auto()) @map("_id") @db.ObjectId
  // healthCenter      HealthCenterService                  @relation(fields: [healthCenterId], references: [id])
  speciality        HealthCenterSpecialty                @relation(fields: [specialityId], references: [id])
  speakingLanguages HealthCenterDoctorSpeakingLanguage[]
  healthCenterId    String                               @db.ObjectId
  specialityId      String                               @db.ObjectId
  rating            Float                                @default(0)
  name              String
  thumbnail         String
  price             Float
  description       TranslationText[]
  availablityStatus HealthCenterDoctorAvailablityStatus  @default(unavailable)
  shopId            String?                              @db.ObjectId
}

model HealthCenterSpecialty {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  doctors     HealthCenterDoctor[]
  name        TranslationText[]
  description TranslationText[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

model RestaurantEstablishmentType {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  name        TranslationText[]
  status      ServiceStatus     @default(inActive)
  createdById String            @db.ObjectId
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model RestaurantCuisinesType {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  name        TranslationText[]
  status      ServiceStatus     @default(inActive)
  createdById String            @db.ObjectId
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model RestaurnatSettingAndAmbiance {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  name        TranslationText[]
  status      ServiceStatus     @default(inActive)
  createdById String            @db.ObjectId
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model HotelRoom {
  id                  String                         @id @default(auto()) @map("_id") @db.ObjectId
  sellerId            String                         @db.ObjectId
  createdAt           DateTime                       @default(now())
  updatedAt           DateTime                       @updatedAt
  roomMetaInfo        HotelRoomTranslationMetaInfo[]
  status              ServiceStatus                  @default(active)
  pricePerNight       Float
  dailyPrice          Boolean
  beds                Int
  bathrooms           Int
  num_of_rooms        Int
  rating              Float                          @default(0)
  reviews             Int                            @default(0)
  ratingStars         Float                          @default(0)
  insurance           Float
  presentations       ServicePresentation[]
  dailyPrices         ServiceDailyPrices?
  discount            ServiceDiscount
  includedServices    TranslationArrayText[]
  popularAmenities    ServiceAmenity[]
  cancelationPolicies ServiceCancelationPolicy[]
  extras              ServiceExtra[]
  includedAmenities   TranslationArrayText[]
  measurements        PropertyMeasurements
  shopId              String?                        @db.ObjectId
}

model Vehicle {
  id                  String                     @id @default(auto()) @map("_id") @db.ObjectId
  typeId              String                     @db.ObjectId
  title               TranslationText[]
  presentations       ServicePresentation[]
  brand               String
  model               String
  price               Int
  rating              Float                      @default(0)
  insurance           Float
  properties          VehicleProperties
  cancelationPolicies ServiceCancelationPolicy[]
}

model ServiceInsurance {
  id        String                     @id @map("_id") @db.ObjectId
  itemId    String                     @db.ObjectId
  buyerId   String                     @db.ObjectId
  sellerId  String                     @db.ObjectId
  itemType  String
  amount    Float
  status    ServiceInsuranceStatusEnum
  createdAt DateTime                   @default(now())
  updatedAt DateTime                   @updatedAt
}

enum ServiceInsuranceStatusEnum {
  pending
  paid
  requested
  refused
  refunded
}

type VehicleProperties {
  seats           Int
  windows         Int
  maxSpeedInKm    Int
  lugaggeCapacity Int
  gpsAvailable    Boolean
  airCondition    Boolean
}

model RestaurantMenu {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId()
  name         TranslationText[]
  restaurantId String            @db.ObjectId
  dishs        RestaurantDish[]
}

model RestaurantDish {
  id          String                 @id @default(auto()) @map("_id") @db.ObjectId()
  name        TranslationText[]
  price       Int
  ingredients TranslationArrayText[]
  thumbnail   String
  type        RestaurantDishType
  sales       Int                    @default(0)
  menuId      String                 @db.ObjectId
  menu        RestaurantMenu         @relation(fields: [menuId], references: [id])
}

enum RestaurantDishType {
  starter
  dessert
  main
}

type HotelRoomMetaInfo {
  title       String
  description String
}

type HotelRoomTranslationMetaInfo {
  langId String
  value  HotelRoomMetaInfo
}

model BeautyCenterTreatment {
  id                    String            @id @default(auto()) @map("_id") @db.ObjectId
  treatmentCategoryId   String
  title                 TranslationText[]
  price                 Float
  duration              Int[]
  discount              ServiceDiscount
  beautyCenterServiceId String?           @db.ObjectId
  thumbnail             String
}

type ServiceWeekDaysWorkingHours {
  mo ServiceDayWorkingHours?
  tu ServiceDayWorkingHours?
  we ServiceDayWorkingHours?
  th ServiceDayWorkingHours?
  fr ServiceDayWorkingHours?
  sa ServiceDayWorkingHours?
  su ServiceDayWorkingHours?
}

type ServiceSpecialWorkingHoursDay {
  date         DateTime
  workingHours ServiceDayWorkingHours
}

type ServiceDayWorkingHours {
  periods DateTime[]
}

type PropertyMeasurements {
  inFeet  Int
  inMeter Int
}

type ServiceDailyPrices {
  mo Int
  tu Int
  we Int
  th Int
  fr Int
  sa Int
  su Int
}

type ServiceExtra {
  name TranslationText[]
  cost Int
}

type ServiceCancelationPolicy {
  duration Int
  cost     Int
}

type ServiceAmenity {
  value String
  label TranslationText[]
}

type ServiceDiscount {
  value Int
  units Int
}

type ServiceMetaInfo {
  title              String
  description        String
  metaTagDescription String
  metaTagKeywords    String[]
  hashtags           String[]
}

type ServiceMetaTranslationInfo {
  langId String
  value  ServiceMetaInfo
}

type ServiceContact {
  address String
  country String
  state   String?
  city    String
  email   String
  phone   String
}

type ServicePolicy {
  policyTitle String
  terms       String[]
}

type ServiceTranslationPolicies {
  langId String
  value  ServicePolicy[]
}

type ServicePresentation {
  type ServicePresentationType
  src  String
}

type TranslationText {
  langId String
  value  String
}

type TranslationArrayText {
  langId String
  value  String[]
}

type Location {
  address    String
  country    String
  state      String
  city       String
  lat        Float
  lon        Float
  postalCode Int
}

enum ServicePresentationType {
  img
  vid
}

enum ServiceType {
  hotel
  holiday_rentals
  restaurant
  health_center
  beauty_center
  vehicle
}

enum ServicePaymentMethods {
  credit_card
  visa
  mastercard
  check
  cash
}

enum ServiceStatus {
  inActive
  active
  suspended
}

enum HealthCenterDoctorAvailablityStatus {
  available
  unavailable
}

enum ServiceTypeOfSeller {
  individual
  professional
}

enum TreatmentCategoryStatus {
  active
  inActive
}

enum HealthCenterDoctorSpeakingLanguage {
  EN
  FR
  GE
  GD
}
