// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ServiceCategoryFilterValue {
  name      String
  sortOrder Int
}

type ServiceCategoryFilter {
  filterGroupName String
  filterValues    ServiceCategoryFilterValue[]
  sortOrder       Int
}

model ServiceCategory {
  id              String                  @id @default(auto()) @map("_id") @db.ObjectId
  createdByUserId String
  name            String
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt()
  filters         ServiceCategoryFilter[]
}

model ServiceWorkingSchedule {
  id          String                      @id @default(auto()) @map("_id") @db.ObjectId
  ownerId     String                      @unique @db.ObjectId
  weekdays    ServiceWeekDaysWorkingHours
  specialDays DateTime[]
}

model HotelService {
  id              String                       @id @default(auto()) @map("_id") @db.ObjectId
  ownerId         String                       @unique @db.ObjectId
  createdAt       DateTime                     @default(now())
  updatedAt       DateTime                     @updatedAt
  vat             Int                          @default(0)
  status          ServiceStatus                @default(inActive)
  presentations   ServicePresentation[]
  policies        ServiceTranslationPolicies[]
  serviceMetaInfo ServiceMetaTranslationInfo[]
  rooms           HotelRoom[]
  payment_methods ServicePaymentMethods[]
}

model RestaurantService {
  id                   String                       @id @default(auto()) @map("_id") @db.ObjectId
  ownerId              String                       @unique @db.ObjectId
  createdAt            DateTime                     @default(now())
  updatedAt            DateTime                     @updatedAt
  vat                  Int                          @default(0)
  cancelation_fee      Int                          @default(0)
  status               ServiceStatus                @default(inActive)
  presentations        ServicePresentation[]
  policies             ServiceTranslationPolicies[]
  serviceMetaInfo      ServiceMetaTranslationInfo[]
  payment_methods      ServicePaymentMethods[]
  menus                RestaurantMenu[]
  establishmentType    String
  cuisinesType         String
  setting_and_ambiance String
  michelin_guide_stars Int
}

model HotelRoom {
  id                  String                         @id @default(auto()) @map("_id") @db.ObjectId
  hotel               HotelService                   @relation(fields: [hotelId], references: [id])
  hotelId             String                         @db.ObjectId
  createdAt           DateTime                       @default(now())
  updatedAt           DateTime                       @updatedAt
  roomMetaInfo        HotelRoomTranslationMetaInfo[]
  pricePerNight       Float
  dailyPrice          Boolean
  beds                Int
  bathrooms           Int
  num_of_rooms        Int
  dailyPrices         ServiceDailyPrices
  discount            ServiceDiscount
  includedServices    TranslationArrayText[]
  popularAmenities    ServiceAmenity[]
  cancelationPolicies ServiceCancelationPolicy[]
  extras              ServiceExtra[]
  includedAmenities   TranslationArrayText[]
  measurements        PropertyMeasurements
}

type RestaurantMenu {
  id    String
  name TranslationText[]
  dishs RestaurantDish[]
}

type RestaurantDish {
  id          String
  name        TranslationText[]
  price       Int
  ingredients TranslationArrayText[]
  thumbnail   String
}

enum ServicePaymentMethods {
  credit_card
  visa
  mastercard
  check
  cash
}

enum ServiceStatus {
  inActive
  active
}

type HotelRoomMetaInfo {
  title       String
  description String
}

type HotelRoomTranslationMetaInfo {
  langId String
  value  HotelRoomMetaInfo
}

type ServiceWeekDaysWorkingHours {
  mo ServiceDayWorkingHours
  tu ServiceDayWorkingHours
  we ServiceDayWorkingHours
  th ServiceDayWorkingHours
  fr ServiceDayWorkingHours
  sa ServiceDayWorkingHours
  su ServiceDayWorkingHours
}

type ServiceDayWorkingHours {
  periods DateTime[]
}

type PropertyMeasurements {
  inFeet  Int
  inMeter Int
}

type ServiceDailyPrices {
  mo Int
  tu Int
  we Int
  th Int
  fr Int
  sa Int
  su Int
}

type ServiceExtra {
  name TranslationText[]
  cost Int
}

type ServiceCancelationPolicy {
  duration Int
  cost     Int
}

type ServiceAmenity {
  value String
  label TranslationText[]
}

type ServiceDiscount {
  value Int
  units Int
}

type ServiceMetaInfo {
  title              String
  description        String
  metaTagDescription String
  metaTagKeywords    String[]
  hashtags           String[]
}

type ServiceMetaTranslationInfo {
  langId String
  value  ServiceMetaInfo
}

type ServiceContact {
  address String
  country String
  state   String?
  city    String
  email   String
  phone   String
}

type ServicePolicy {
  policyTitle String
  terms       String[]
}

type ServiceTranslationPolicies {
  langId String
  value  ServicePolicy[]
}

type ServicePresentation {
  type ServicePresentationType
  src  String
}

enum ServicePresentationType {
  img
  vid
}

type TranslationText {
  langId String
  value  String
}

type TranslationArrayText {
  langId String
  value  String[]
}
