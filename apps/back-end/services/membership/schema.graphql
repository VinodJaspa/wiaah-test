# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type MembershipTurnoverRule {
  id: ID!
  membershipId: ID!
  usage: Float
  commission: Float!
  commissionOn: CommissionOn
  commissionType: CommissionType!
  type: MembershipTurnoverRuleType!
  key: String!
}

enum CommissionOn {
  external_click
  revenue
}

enum CommissionType {
  fixed
  percentage
}

enum MembershipTurnoverRuleType {
  usage
  flat
}

type MembershipIncludedItem {
  title: String!
}

type Membership {
  id: ID!
  name: String!
  priceIds: [String!]!
  recurring: MembershipRecurring!
  turnover_rules: [MembershipTurnoverRule!]!
  includings: [MembershipIncludedItem!]!
  sortOrder: Int!
}

enum MembershipRecurring {
  day
  month
  week
  year
}

type Account {
  membershipId: ID
  id: ID!
  membership: Membership
  Membership: Membership!
  subscribedPlan: MembershipSubscription!
}

type MembershipSubscription {
  userId: ID!
  membershipId: ID!
  startAt: String!
  endAt: String!
  status: MembershipSubscriptionStatus!
  usage: Float!
  membership: Membership!
  subscriber: Account!
}

enum MembershipSubscriptionStatus {
  pending
  active
  expired
}

type Product {
  id: ID!
  isExternalShopping: Boolean!
}

type Query {
  adminGetMemberships(args: AdminGetMembershipsInput!): [Membership!]!
  getSubscriableMemberships: [Membership!]!
  getMyMembership: MembershipSubscription
  getUserMembership(id: String!): MembershipSubscription
  adminGetMembershipSubscriptions(args: AdminGetMembersipSubscriptionInput!): [MembershipSubscription!]!
}

input AdminGetMembershipsInput {
  name: String
  sortOrder: Int
  pagination: GqlPaginationInput!
}

input GqlPaginationInput {
  page: Int!
  take: Int!
}

input AdminGetMembersipSubscriptionInput {
  username: String
  nextPaymentDate: String
  expiryDate: String
  name: String
  status: MembershipSubscriptionStatus
  pagination: GqlPaginationInput!
}

type Mutation {
  createMembership(args: CreateMembershipInput!): Boolean!
  updateMembership(args: UpdateMembershipInput!): Boolean!
  unsubscribe: Boolean!
  subscribeMembership(membershipId: String!): String
}

input CreateMembershipInput {
  name: String!
  recurring: MembershipRecurring!
  turnover_rules: [MembershipTurnoverRuleInput!]!
  includings: [MembershipIncludedItemInput!]!
  sortOrder: Int!
}

input MembershipTurnoverRuleInput {
  usage: Float
  commission: Float!
  commissionOn: CommissionOn!
  commissionType: CommissionType!
  type: MembershipTurnoverRuleType!
  key: String!
}

input MembershipIncludedItemInput {
  title: String!
}

input UpdateMembershipInput {
  name: String
  comissionOn: CommissionOn
  includings: [UpdateMembershipIncludedItemInput!]
  id: ID!
  turnover_rules: [UpdateMembershipTurnoverRuleInput!]
}

input UpdateMembershipIncludedItemInput {
  title: String!
}

input UpdateMembershipTurnoverRuleInput {
  turnover_amount: Float
  price: Float
  commission: Float
  id: ID!
}
