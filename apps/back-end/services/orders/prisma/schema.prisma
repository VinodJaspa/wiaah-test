// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Order {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  sellerId          String      @db.ObjectId
  buyerId           String      @db.ObjectId
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt()
  items             OrderItem[]
  status            OrderStatus
  shippingMethodId  String      @db.ObjectId
  shippingAddressId String      @db.ObjectId
  billingAddressId  String?     @db.ObjectId
  completedAt       DateTime?
}

model RefundRequest {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  requestedById String           @db.ObjectId
  orderItemId   String           @unique() @db.ObjectId
  sellerId      String           @db.ObjectId
  reason        String
  type          RefundType
  amount        Float
  fullAmount    Boolean
  qty           Int
  status        RefundStatusType @default(pending)
  rejectReason  String?
  opened        Boolean
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model OrderItem {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  type           String
  qty            Int
  paid           Float?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  paidAt         DateTime?
  refundable     Boolean         @default(true)
  productId      String          @db.ObjectId
  discount       Float?
  discountAmount Float?
  cashback       Float?
  affiliatorId   String?
  status         OrderStatusEnum @default(pending)
  rejectReason   String?
  Order          Order?          @relation(fields: [orderId], references: [id])
  orderId        String?         @db.ObjectId
}

type OrderStatus {
  of           OrderStatusEnum
  rejectReason String?
}

enum RefundStatusType {
  pending
  accepted
  rejected
  refunded
  closed
}

enum OrderStatusEnum {
  pending
  paid
  rejectedBySeller
  rejectedByBuyer
  shipping
  compeleted
  canceled
}

enum RefundType {
  money
  credit
}
