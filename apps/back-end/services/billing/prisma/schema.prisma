// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model WithdrawalRequest {
  id String @id @db.ObjectId @default(auto()) @map("_id")
  userId String
  amount Float
  requestedAt DateTime @default(now())
  processedAt DateTime
  status WithdrawalStatus @default(pending)
}

enum WithdrawalStatus {
  pending
  refused
  processed
}


model InvoiceRecord {
  id String @id @db.ObjectId @default(auto()) @map("_id")
  period String
  type InvoiceRecordTypes
  total Float @default(0)
  overdue Float @default(0)
  paid Float @default(0)
  unPaid Float @default(0)
}

enum InvoiceRecordTypes {
  year
  month
  day
}


model Transaction {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt()
  status    TransactionStatus @default(pending)
  from      String            @db.ObjectId
  userId  String            @db.ObjectId
  description String
  amount    Float
}

enum TransactionStatus {
  pending
  success
  failed
}


model BillingAddressCollection {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  ownerId          String           @unique @db.ObjectId
  lastUsedId       String?          @db.ObjectId
  billingAddresses BillingAddress[]
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

type BillingAddress {
  id         String
  address    String
  address2   String
  country    String
  city       String
  state      String
  postalCode String
  phone      String
}

model Balance {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId             String   @unique @db.ObjectId
  withdrawableBalance Float
  pendingBalance      Float
  cashbackBalance     Float
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}
