# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type Product {
  id: ID!
}

type Service {
  id: ID!
}

type Account {
  id: ID!
}

type Affiliation {
  id: ID!
  sellerId: ID!
  itemId: ID!
  status: AffiliationStatus!
  itemType: String!
  commision: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  expireAt: DateTime!
  product: Product
  service: Service
  seller: Account!
}

enum AffiliationStatus {
  active
  inActive
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AffiliationPurchase {
  id: ID!
  itemId: ID!
  itemType: String!
  service: Service
  product: Product
  sellerId: ID!
  affiliatorId: ID!
  affiliationId: ID!
  purchaserId: ID!
  createdAt: DateTime!
  paidCommissionPercent: Float!
  paidCommissionAmount: Float!
  seller: Account!
  purchaser: Account!
  affiliator: Account!
  affiliation: Affiliation!
}

type Query {
  getMyProductsAffiliationHistory(args: GetAffiliationHistoryInput!): [AffiliationPurchase!]!
  getUserAffiliationHistory(id: String!): [AffiliationPurchase!]!
  getUserAffiliationsPurchases(args: GetUserAffiliationsPurchasesInput!): [AffiliationPurchase!]!
  getFilteredAffiliationsHistory(filters: GetFilteredAffiliationHistoryInput!): [AffiliationPurchase!]!
  getUserAffiliations(args: GetUserAffiliationsInput!): [Affiliation!]!
  getFilteredAffiliations(filters: GetFilteredAffiliationsInput!): [Affiliation!]!
  getMyAffiliations(args: GetMyAffiliationsInput!): [Affiliation!]!
}

input GetAffiliationHistoryInput {
  pagination: GqlPaginationInput!
}

input GqlPaginationInput {
  page: Int!
  take: Int!
}

input GetUserAffiliationsPurchasesInput {
  pagination: GqlPaginationInput!
  id: ID!
}

input GetFilteredAffiliationHistoryInput {
  seller: String
  purchaser: String
  price: Float
  title: String
  affiliator: String
  commission: Float
  money_generated: Float
  purchasedBefore: String
  purchasedAfter: String
  affiliation_link: String
  pagination: GqlPaginationInput!
}

input GetUserAffiliationsInput {
  pagination: GqlPaginationInput!
  id: ID!
}

input GetFilteredAffiliationsInput {
  seller: String
  commission: Float
  price: Float
  link: String
  createdBefore: DateTime
  createdAfter: DateTime
  pagination: GqlPaginationInput!
}

input GetMyAffiliationsInput {
  pagination: GqlPaginationInput!
}

type Mutation {
  adminUpdateAffiliation(updateAffilaition: UpdateAffiliationAdminInput!): Boolean!
  createNewAffiliationProduct(args: CreateAffiliationInput!): Affiliation!
  updateAffiliation(args: UpdateAffiliationInput!): Affiliation!
  deleteAffiliation(id: ID!): Affiliation!
}

input UpdateAffiliationAdminInput {
  itemId: ID
  itemType: String
  commision: Float
  expireAt: String
  id: ID!
  sellerId: ID!
}

input CreateAffiliationInput {
  itemId: ID!
  itemType: String!
  commision: Float!
  expireAt: String!
}

input UpdateAffiliationInput {
  itemId: ID
  itemType: String
  commision: Float
  expireAt: String
  id: ID!
}
